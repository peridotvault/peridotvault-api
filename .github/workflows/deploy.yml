name: Deploy to Hostinger VPS

on:
    push:
        branches:
            - main

jobs:
    deploy:
        name: Deploy to VPS
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Deploy to VPS via SSH
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USERNAME }}
                  key: ${{ secrets.VPS_SSH_KEY }} 
                  script: |
                      APP_DIR="/home/${{ secrets.VPS_USERNAME }}/peridotvault-api"
                      REPO_URL="https://oauth2:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
                      if [ ! -d "$APP_DIR" ]; then
                      # Clone using the new HTTPS URL
                      git clone "$REPO_URL" "$APP_DIR"
                      fi

                      cd "$APP_DIR"

                      # You may need to update the remote URL for future pulls if you cloned previously with SSH
                      # This command is safe to run even if the remote is already correct.
                      git remote set-url origin "$REPO_URL"

                      # Pull the latest changes from the main branch
                      git pull origin main

                      # Create the .env file from the GitHub Secret
                      echo "Creating .env file..."
                      cat <<EOF > .env
                      ${{ secrets.ENV_FILE }}
                      EOF

                       # Build Docker image dan jalankan container (karena tidak pakai docker-compose)
                      echo "Building Docker image..."
                      docker build -t peridotvault-api .

                      echo "Stopping and removing old container..."
                      docker stop peridotvault-api || true
                      docker rm peridotvault-api || true

                      echo "Starting new container..."
                      docker run -d \
                        --name peridotvault-api \
                        --env-file .env \
                        -p 3000:3000 \
                        peridotvault-api

                      # Opsional: cleanup image lama
                      echo "Cleaning up unused Docker images..."
                      docker image prune -af --filter "until=24h"
